version: "3.9"

services:
  front:
    image: sermalenk/skypro-front:lesson-38
    depends_on:
      api:
        condition: service_started
    ports:
      - 80:80

  api:
    image: devoind/sk_evedrov_diploma:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    ports:
      - 8000:8000
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  migrations:
    image: devoind/sk_evedrov_diploma:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    env_file:
      - .env
    depends_on:
      todolist_db:
        condition: service_healthy
    command: python manage.py migrate

  bot:
    image: devoind/sk_evedrov_diploma:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    env_file:
      - .env
    depends_on:
      todolist_db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    command: python manage.py runbot

  db:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
