name: Build and deploy workflow
on: [push]
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v3
      - name: docker build
        run: docker build -t devoind/sk_evedrov_diploma:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN}} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: docker push
        run: docker push devoind/sk_evedrov_diploma:$GITHUB_REF_NAME-$GITHUB_RUN_ID

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      SOCIAL_AUTH_VK_OAUTH2_KEY: ${{ secrets.SOCIAL_AUTH_VK_OAUTH2_KEY }}
      SOCIAL_AUTH_VK_OAUTH2_SECRET: ${{ secrets.SOCIAL_AUTH_VK_OAUTH2_SECRET }}

    steps:
      - name: clone code
        uses: actions/checkout@v3
      - name: render configs
        run: |
          mkdir deploy
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
      - name: copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: "deploy/docker-compose.yaml"
          target: "todolist"
          strip_components: 1
      - name: deploy app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd todolist
            echo ${{ secrets.PASSWORD }} | sudo -S docker-compose up -d
            echo ${{ secrets.PASSWORD }} | sudo -S docker system prune -a -f
